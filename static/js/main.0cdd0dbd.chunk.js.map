{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","initialMovieState","NewMovie","onAdd","count","setCount","isSubmitActive","setIsSubmitActive","setMovie","handleInputChange","key","prevState","newMovie","Object","values","entrie","trim","length","onSubmit","preventDefault","currentCount","disabled","App","moviesFromServer","moviesList","setMovieList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cdd0dbd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\nconst initialMovieState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\ninterface NewMovieProps {\n  onAdd: (movie: Movie) => void;\n}\n\nexport const NewMovie:React.FC<NewMovieProps> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [isSubmitActive, setIsSubmitActive] = useState(false);\n  const [movie, setMovie] = useState<Movie>(initialMovieState);\n\n  const handleInputChange = (key: string, value: string) => {\n    setMovie((prevState) => {\n      const newMovie = {\n        ...prevState,\n        [key]: value,\n      };\n\n      const [title, , imgUrl, imdbUrl, imdbId]\n        = [...Object.values(newMovie).map(entrie => entrie.trim())];\n\n      if (title.length > 0\n        && imgUrl.length > 0\n        && imdbUrl.length > 0\n        && imdbId.length > 0\n      ) {\n        setIsSubmitActive(true);\n      } else {\n        setIsSubmitActive(false);\n      }\n\n      return newMovie;\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(movie);\n    setMovie(initialMovieState);\n    setCount((currentCount: number) => currentCount + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={(value: string) => {\n          handleInputChange('title', value);\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={(value: string) => {\n          handleInputChange('description', value);\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={(value: string) => {\n          handleInputChange('imgUrl', value);\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={(value: string) => {\n          handleInputChange('imdbUrl', value);\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={(value: string) => {\n          handleInputChange('imdbId', value);\n        }}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isSubmitActive}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [moviesList, setMovieList] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(movie: Movie) => {\n            setMovieList((prevState) => ([\n              ...prevState,\n              movie,\n            ]));\n          }}\n        />\n\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}